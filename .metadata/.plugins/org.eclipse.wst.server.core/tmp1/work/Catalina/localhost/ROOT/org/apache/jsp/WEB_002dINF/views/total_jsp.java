/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2020-12-29 05:09:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.GregorianCalendar;

public final class total_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/ERP/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/ERP/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1604883783799L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<script src=\"http://code.jquery.com/jquery-3.1.1.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/3.0.1/handlebars.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/style.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/icono.css\">\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");

	GregorianCalendar cal = new GregorianCalendar();
	int thisYear = cal.get(GregorianCalendar.YEAR);
	int thisMonth = cal.get(GregorianCalendar.MONTH)+1;

      out.write("\n");
      out.write("<title> 통계 </title>\n");
      out.write("<style>\n");
      out.write("   #yearlyData {margin-top:180px;}\n");
      out.write("   #yearlyData, #monthlyData, #DLData {margin-left:50px; margin-right:2%;}\n");
      out.write("   #yearlyData, #monthlyData, #DLData {overflow:hidden;}\n");
      out.write("   #yearlyAmountChart, #yearlyPayTypeChart, #monthlyAmountChart, #monthlyPayTypeChart, #yearlyCategoryChart, #monthlyCategoryChart {float:left;}\n");
      out.write("   #yearlyAmountChart, #monthlyAmountChart {width:900px; height:300px;}\n");
      out.write("   #totalMonthlyBalance {width:1500px; height:400px;}\n");
      out.write("   #yearlyPayTypeChart, #monthlyPayTypeChart, #yearlyCategoryChart, #monthlyCategoryChart {width:300px; height:300px;}\n");
      out.write("   #sel {margin-left:900px; overflow:hidden;}\n");
      out.write("   .sel, .selPayType {float:left;}\n");
      out.write("   #divCenter {width: 1600px; height:1000px; margin-top: 150px; margin-left: 200px; margin-bottom:100px;}\n");
      out.write("   span {color:black;}\n");
      out.write("   \n");
      out.write("      select {\n");
      out.write("  width: 60px;\n");
      out.write("  padding: .8em .5em;\n");
      out.write("  font-family: inherit;\n");
      out.write("  font-size:13px;\n");
      out.write("  -webkit-appearance: none;\n");
      out.write("  -moz-appearance: none;\n");
      out.write("  appearance: none;\n");
      out.write("  border: 1px solid #ccc;\n");
      out.write("  border-radius: 5px;\n");
      out.write("  text-align:center;\n");
      out.write("  }\n");
      out.write("  *:focus { outline: none; }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"divCenter\">\n");
      out.write("<div id=\"yearlyData\">\n");
      out.write("   <div id=\"sel\">\n");
      out.write("      <div id=\"selYear\" class=\"sel\"></div>\n");
      out.write("      <div id=\"selYearlyPayType\" class=\"selPayType\">\n");
      out.write("         <select id=\"yearlyPayType\">\n");
      out.write("            <option value=\"매출\" selected>매출</option>\n");
      out.write("            <option value=\"환불\">환불</option>\n");
      out.write("         </select>\n");
      out.write("         <input type=\"hidden\" id=\"btnYear\">\n");
      out.write("         <input type=\"hidden\" id=\"btnMonth\">\n");
      out.write("      </div>\n");
      out.write("   </div>\n");
      out.write("   <div id=\"yearlyAmountChart\"></div>\n");
      out.write("   <div id=\"yearlyPayTypeChart\"></div>\n");
      out.write("   <div id=\"yearlyCategoryChart\"></div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"monthlyData\">\n");
      out.write("   <div id=\"sel\">\n");
      out.write("      <div id=\"selMonth\" class=\"sel\"></div>\n");
      out.write("      <div id=\"selMonthlyPayType\" class=\"selPayType\">\n");
      out.write("         <select id=\"monthlyPayType\">\n");
      out.write("            <option value=\"매출\" selected>매출</option>\n");
      out.write("            <option value=\"환불\">환불</option>\n");
      out.write("         </select>\n");
      out.write("      </div>\n");
      out.write("   </div>\n");
      out.write("   <div id=\"monthlyAmountChart\"></div>\n");
      out.write("   <div id=\"monthlyPayTypeChart\"></div>\n");
      out.write("   <div id=\"monthlyCategoryChart\"></div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"DLData\">\n");
      out.write("   <div id=\"totalMonthlyBalance\"></div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, false);
      out.write("\n");
      out.write("<div id=\"footer\">");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("// var Array = ['매출', '환불', '비용'];\n");
      out.write("let year = ");
      out.print(thisYear);
      out.write("-1;\n");
      out.write("let month = ");
      out.print(thisMonth);
      out.write(";\n");
      out.write("let date = year+\"/\"+month;\n");
      out.write("var yearlyPayTypeURL = \"salesYearlyPayTypeList.json\";\n");
      out.write("var monthlyPayTypeURL = \"salesMonthlyPayTypeList.json\";\n");
      out.write("var yearlyCategoryURL = \"salesYearlyCategoryList.json\";\n");
      out.write("var monthlyCategoryURL = \"salesMonthlyCategoryList.json\";\n");
      out.write("var yearlyPayTypeTitle = \"연간 결제 타입별 매출\";\n");
      out.write("var monthlyPayTypeTitle = \"월간 결제 타입별 매출\";\n");
      out.write("var yearlyCategoryTitle = \"연간 상품별 매출\";\n");
      out.write("var monthlyCategoryTitle = \"월간 상품별 매출\";\n");
      out.write("\n");
      out.write("getYear();\n");
      out.write("\n");
      out.write("yearStart();\n");
      out.write("monthStart();\n");
      out.write("lightBox();\n");
      out.write("setTimeout(outLightBox, 700);\n");
      out.write("// yearlyAmountChart();\n");
      out.write("// monthlyAmountChart();\n");
      out.write("// yearlyPayTypeChart();\n");
      out.write("// monthlyPayTypeChart();\n");
      out.write("// yearlyCategoryChart();\n");
      out.write("// monthlyCategoryChart();\n");
      out.write("// totalYearlyBalance();\n");
      out.write("\n");
      out.write("function yearStart() {\n");
      out.write("\tyearlyAmountChart();\n");
      out.write("\tyearlyPayTypeChart();\n");
      out.write("\tyearlyCategoryChart();\n");
      out.write("\ttotalYearlyBalance();\n");
      out.write("}\n");
      out.write("\n");
      out.write("function monthStart() {\n");
      out.write("\tmonth = $(\"#btnMonth\").val();\n");
      out.write("\tmonthlyAmountChart();\n");
      out.write("\tmonthlyPayTypeChart();\n");
      out.write("\tmonthlyCategoryChart();\n");
      out.write("}\n");
      out.write("\n");
      out.write("$(\"#yearlyPayType\").on(\"change\", function() {\n");
      out.write("\tif($(this).val() == \"매출\") {\n");
      out.write("\t\tyearlyPayTypeURL = \"salesYearlyPayTypeList.json\";\n");
      out.write("\t\tyearlyCategoryURL = \"salesYearlyCategoryList.json\";\n");
      out.write("\t\tyearlyPayTypeTitle = \"연간 결제 타입별 매출\";\n");
      out.write("\t\tyearlyCategoryTitle = \"연간 상품별 매출\";\n");
      out.write("\t\t$(this).prop(\"selected\", true);\n");
      out.write("\t\tyearlyPayTypeChart();\n");
      out.write("\t\tyearlyCategoryChart();\n");
      out.write("\t}\n");
      out.write("\tif($(this).val() == \"환불\") {\n");
      out.write("\t\tyearlyPayTypeURL = \"refundYearlyPayTypeList.json\";\n");
      out.write("\t\tyearlyCategoryURL = \"refundYearlyCategoryList.json\";\n");
      out.write("\t\tyearlyPayTypeTitle = \"연간 결제 타입별 환불\";\n");
      out.write("\t\tyearlyCategoryTitle = \"연간 상품별 환불\";\n");
      out.write("\t\t$(this).prop(\"selected\", true);\n");
      out.write("\t\tyearlyPayTypeChart();\n");
      out.write("\t\tyearlyCategoryChart();\n");
      out.write("\t}\n");
      out.write("});\n");
      out.write("\n");
      out.write("$(\"#monthlyPayType\").on(\"change\", function() {\n");
      out.write("\tif($(this).val() == \"매출\") {\n");
      out.write("\t\tmonthlyPayTypeURL = \"salesMonthlyPayTypeList.json\";\n");
      out.write("\t\tmonthlyCategoryURL = \"salesMonthlyCategoryList.json\";\n");
      out.write("\t\tmonthlyPayTypeTitle = \"월간 결제 타입별 매출\";\n");
      out.write("\t\tmonthlyCategoryTitle = \"월간 상품별 매출\";\n");
      out.write("\t\t$(this).prop(\"selected\", true);\n");
      out.write("\t\tmonthlyPayTypeChart();\n");
      out.write("\t\tmonthlyCategoryChart();\n");
      out.write("\t}\n");
      out.write("\tif($(this).val() == \"환불\") {\n");
      out.write("\t\tmonthlyPayTypeURL = \"refundMonthlyPayTypeList.json\";\n");
      out.write("\t\tmonthlyCategoryURL = \"refundMonthlyCategoryList.json\";\n");
      out.write("\t\tmonthlyPayTypeTitle = \"월간 결제 타입별 환불\";\n");
      out.write("\t\tmonthlyCategoryTitle = \"월간 상품별 환불\";\n");
      out.write("\t\t$(this).prop(\"selected\", true);\n");
      out.write("\t\tmonthlyPayTypeChart();\n");
      out.write("\t\tmonthlyCategoryChart();\n");
      out.write("\t}\n");
      out.write("});\n");
      out.write("\n");
      out.write("$(\"#selYear\").on(\"change\", \"#year\", function() {\n");
      out.write("\tyear = $(this).val();\n");
      out.write("\tgetMonth();\n");
      out.write("\tyearlyPayTypeChart();\n");
      out.write("\tyearlyCategoryChart();\n");
      out.write("\ttotalYearlyBalance();\n");
      out.write("});\n");
      out.write("\n");
      out.write("$(\"#selMonth\").on(\"change\", \"#month\", function() {\n");
      out.write("\tmonth = $(this).val();\n");
      out.write("\tmonthlyPayTypeChart();\n");
      out.write("\tmonthlyCategoryChart();\n");
      out.write("});\n");
      out.write("\n");
      out.write("function totalYearlyBalance() {\n");
      out.write("\tgoogle.charts.load('current', {'packages':['corechart']});\n");
      out.write("    google.charts.setOnLoadCallback(drawVisualization);\n");
      out.write("   \t\tfunction drawVisualization() {\n");
      out.write("         \t$.ajax({\n");
      out.write("             \ttype:\"get\",\n");
      out.write("\t            url:\"totalMonthlyBalance.json\",\n");
      out.write("\t            dataType:\"json\",\n");
      out.write("\t            data:{\"year\":year},\n");
      out.write("             \tsuccess:function(result){\n");
      out.write("//                  var result = [[\"과목\",\"점수\"],[\"국어\",90],[\"영어\",80]];\n");
      out.write("                 \tvar data = google.visualization.arrayToDataTable(result); /* 데이터 셋팅 */\n");
      out.write("                 \tvar options = {\n");
      out.write("                 \t\t\ttitle : '자산 통계',\n");
      out.write("                 \t\t\tvAxis : {\n");
      out.write("                 \t\t\t\tminValue : 0\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseries : {\n");
      out.write("                 \t\t\t\t0 : {color: '#A19CFF'},\n");
      out.write("                                1 : {color: '#CEFFC7'}\n");
      out.write("                 \t\t\t\t\n");
      out.write("                 \t\t\t},\n");
      out.write("//                  \t\t\tlegend : 'none'\n");
      out.write("                 \t\t\t}; /* 옵션 셋팅 */\n");
      out.write("                 \tvar chart = new google.visualization.AreaChart(document.getElementById('totalMonthlyBalance'));\n");
      out.write("                 \t\tchart.draw(data, options); /* 차트 그리기 */\n");
      out.write("             \t}\n");
      out.write("         \t});\n");
      out.write("     \t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function yearlyCategoryChart() {\n");
      out.write("\tgoogle.charts.load('current', {'packages':['corechart']});\n");
      out.write("    google.charts.setOnLoadCallback(drawVisualization);\n");
      out.write("   \t\tfunction drawVisualization() {\n");
      out.write("         \t$.ajax({\n");
      out.write("             \ttype:\"get\",\n");
      out.write("\t            url:yearlyCategoryURL,\n");
      out.write("\t            dataType:\"json\",\n");
      out.write("\t            data:{\"year\":year},\n");
      out.write("             \tsuccess:function(result){\n");
      out.write("//                  var result = [[\"과목\",\"점수\"],[\"국어\",90],[\"영어\",80]];\n");
      out.write("                 \tvar data = google.visualization.arrayToDataTable(result); /* 데이터 셋팅 */\n");
      out.write("                 \tvar options = {\n");
      out.write("                 \t\t\ttitle : yearlyCategoryTitle,\n");
      out.write("                 \t\t\tvAxis : {\n");
      out.write("                 \t\t\t\tminValue : 0\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseries : {\n");
      out.write("                 \t\t\t\t0: {color: 'pink'},\n");
      out.write("                 \t\t\t\t1: {color: 'lightgray'},\n");
      out.write("                 \t\t\t\t2: {color: 'skyblue', type: 'line', lineWidth: 4}\n");
      out.write("                 \t\t\t\t\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseriesType :'bars',\n");
      out.write("                 \t\t\tbar : {\n");
      out.write("                 \t\t\t\tgroupWidth : '20%' // 그래프 너비 설정 %\n");
      out.write("                 \t\t\t},\n");
      out.write("//                  \t\t\tlegend : 'none'\n");
      out.write("                 \t\t\t}; /* 옵션 셋팅 */\n");
      out.write("                 \tvar chart = new google.visualization.PieChart(document.getElementById('yearlyCategoryChart'));\n");
      out.write("                 \t\tchart.draw(data, options); /* 차트 그리기 */\n");
      out.write("             \t}\n");
      out.write("         \t});\n");
      out.write("     \t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function monthlyCategoryChart() {\n");
      out.write("\tdate = year +\"/\"+ month;\n");
      out.write("\tgoogle.charts.load('current', {'packages':['corechart']});\n");
      out.write("    google.charts.setOnLoadCallback(drawVisualization);\n");
      out.write("   \t\tfunction drawVisualization() {\n");
      out.write("         \t$.ajax({\n");
      out.write("             \ttype:\"get\",\n");
      out.write("\t            url:monthlyCategoryURL,\n");
      out.write("\t            dataType:\"json\",\n");
      out.write("\t            data:{\"date\":date},\n");
      out.write("             \tsuccess:function(result){\n");
      out.write("//                  var result = [[\"과목\",\"점수\"],[\"국어\",90],[\"영어\",80]];\n");
      out.write("                 \tvar data = google.visualization.arrayToDataTable(result); /* 데이터 셋팅 */\n");
      out.write("                 \tvar options = {\n");
      out.write("                 \t\t\ttitle : monthlyCategoryTitle,\n");
      out.write("                 \t\t\tvAxis : {\n");
      out.write("                 \t\t\t\tminValue : 0\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseries : {\n");
      out.write("                 \t\t\t\t0: {color: 'pink'},\n");
      out.write("                 \t\t\t\t1: {color: 'lightgray'},\n");
      out.write("                 \t\t\t\t2: {color: 'skyblue', type: 'line', lineWidth: 4}\n");
      out.write("                 \t\t\t\t\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseriesType :'bars',\n");
      out.write("                 \t\t\tbar : {\n");
      out.write("                 \t\t\t\tgroupWidth : '20%' // 그래프 너비 설정 %\n");
      out.write("                 \t\t\t},\n");
      out.write("//                  \t\t\tlegend : 'none'\n");
      out.write("                 \t\t\t}; /* 옵션 셋팅 */\n");
      out.write("                 \tvar chart = new google.visualization.PieChart(document.getElementById('monthlyCategoryChart'));\n");
      out.write("                 \t\tchart.draw(data, options); /* 차트 그리기 */\n");
      out.write("             \t}\n");
      out.write("         \t});\n");
      out.write("     \t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function yearlyPayTypeChart() {\n");
      out.write("\tgoogle.charts.load('current', {'packages':['corechart']});\n");
      out.write("    google.charts.setOnLoadCallback(drawVisualization);\n");
      out.write("   \t\tfunction drawVisualization() {\n");
      out.write("         \t$.ajax({\n");
      out.write("             \ttype:\"get\",\n");
      out.write("\t            url:yearlyPayTypeURL,\n");
      out.write("\t            dataType:\"json\",\n");
      out.write("\t            data:{\"year\":year},\n");
      out.write("             \tsuccess:function(result){\n");
      out.write("//                  var result = [[\"과목\",\"점수\"],[\"국어\",90],[\"영어\",80]];\n");
      out.write("                 \tvar data = google.visualization.arrayToDataTable(result); /* 데이터 셋팅 */\n");
      out.write("                 \tvar options = {\n");
      out.write("                 \t\t\ttitle : yearlyPayTypeTitle,\n");
      out.write("                 \t\t\tvAxis : {\n");
      out.write("                 \t\t\t\tminValue : 0\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseries : {\n");
      out.write("                 \t\t\t\t0: {color: 'pink'},\n");
      out.write("                 \t\t\t\t1: {color: 'lightgray'},\n");
      out.write("                 \t\t\t\t2: {color: 'skyblue', type: 'line', lineWidth: 4}\n");
      out.write("                 \t\t\t\t\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseriesType :'bars',\n");
      out.write("                 \t\t\tbar : {\n");
      out.write("                 \t\t\t\tgroupWidth : '20%' // 그래프 너비 설정 %\n");
      out.write("                 \t\t\t},\n");
      out.write("//                  \t\t\tlegend : 'none'\n");
      out.write("                 \t\t\t}; /* 옵션 셋팅 */\n");
      out.write("                 \tvar chart = new google.visualization.PieChart(document.getElementById('yearlyPayTypeChart'));\n");
      out.write("                 \t\tchart.draw(data, options); /* 차트 그리기 */\n");
      out.write("             \t}\n");
      out.write("         \t});\n");
      out.write("     \t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function monthlyPayTypeChart() {\n");
      out.write("\tgoogle.charts.load('current', {'packages':['corechart']});\n");
      out.write("    google.charts.setOnLoadCallback(drawVisualization);\n");
      out.write("   \t\tfunction drawVisualization() {\n");
      out.write("         \t$.ajax({\n");
      out.write("             \ttype:\"get\",\n");
      out.write("\t            url:monthlyPayTypeURL,\n");
      out.write("\t            dataType:\"json\",\n");
      out.write("\t            data:{\"year\":year, \"month\":month},\n");
      out.write("             \tsuccess:function(result){\n");
      out.write("//                  var result = [[\"과목\",\"점수\"],[\"국어\",90],[\"영어\",80]];\n");
      out.write("                 \tvar data = google.visualization.arrayToDataTable(result); /* 데이터 셋팅 */\n");
      out.write("                 \tvar options = {\n");
      out.write("                 \t\t\ttitle : monthlyPayTypeTitle,\n");
      out.write("                 \t\t\tvAxis : {\n");
      out.write("                 \t\t\t\tminValue : 0\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseries : {\n");
      out.write("                 \t\t\t\t0: {color: 'pink'},\n");
      out.write("                 \t\t\t\t1: {color: 'lightgray'},\n");
      out.write("                 \t\t\t\t2: {color: 'skyblue', type: 'line', lineWidth: 4}\n");
      out.write("                 \t\t\t\t\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseriesType :'bars',\n");
      out.write("                 \t\t\tbar : {\n");
      out.write("                 \t\t\t\tgroupWidth : '20%' // 그래프 너비 설정 %\n");
      out.write("                 \t\t\t},\n");
      out.write("//                  \t\t\tlegend : 'none'\n");
      out.write("                 \t\t\t}; /* 옵션 셋팅 */\n");
      out.write("                 \tvar chart = new google.visualization.PieChart(document.getElementById('monthlyPayTypeChart'));\n");
      out.write("                 \t\tchart.draw(data, options); /* 차트 그리기 */\n");
      out.write("             \t}\n");
      out.write("         \t});\n");
      out.write("     \t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function monthlyAmountChart(){\n");
      out.write("    google.charts.load('current', {'packages':['corechart']});\n");
      out.write("    google.charts.setOnLoadCallback(drawVisualization);\n");
      out.write("   \t\tfunction drawVisualization() {\n");
      out.write("         \t$.ajax({\n");
      out.write("             \ttype:\"get\",\n");
      out.write("\t            url:\"totalMonthlyAmount.json\",\n");
      out.write("\t            dataType:\"json\",\n");
      out.write("\t            data:{\"year\":year},\n");
      out.write("             \tsuccess:function(result){\n");
      out.write("//                  var result = [[\"과목\",\"점수\"],[\"국어\",90],[\"영어\",80]];\n");
      out.write("                 \tvar data = google.visualization.arrayToDataTable(result); /* 데이터 셋팅 */\n");
      out.write("                 \tvar options = {\n");
      out.write("                 \t\t\tvAxis : {\n");
      out.write("                 \t\t\t\tminValue : 0\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseries : {\n");
      out.write("                 \t\t\t\t0: {color: 'pink'},\n");
      out.write("                 \t\t\t\t1: {color: 'lightgray'},\n");
      out.write("                 \t\t\t\t2: {color: 'skyblue', type: 'line', lineWidth: 4}\n");
      out.write("                 \t\t\t\t\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseriesType: 'bars',\n");
      out.write("                 \t\t\tbar : {\n");
      out.write("                 \t\t\t\tgroupWidth : '20%' // 그래프 너비 설정 %\n");
      out.write("                 \t\t\t},\n");
      out.write("//                  \t\t\tlegend : 'none'\n");
      out.write("                 \t\t\t}; /* 옵션 셋팅 */\n");
      out.write("                 \tvar chart = new google.visualization.ComboChart(document.getElementById('monthlyAmountChart'));\n");
      out.write("                 \t\tchart.draw(data, options); /* 차트 그리기 */\n");
      out.write("             \t}\n");
      out.write("         \t});\n");
      out.write("     \t}\n");
      out.write(" }\n");
      out.write(" \n");
      out.write("function yearlyAmountChart(){\n");
      out.write("    google.charts.load('current', {'packages':['corechart']});\n");
      out.write("    google.charts.setOnLoadCallback(drawVisualization);\n");
      out.write("   \t\tfunction drawVisualization() {\n");
      out.write("         \t$.ajax({\n");
      out.write("             \ttype:\"get\",\n");
      out.write("\t            url:\"totalYearlyAmount.json\",\n");
      out.write("\t            dataType:\"json\",\n");
      out.write("             \tsuccess:function(result){\n");
      out.write("//                  var result = [[\"과목\",\"점수\"],[\"국어\",90],[\"영어\",80]];\n");
      out.write("                 \tvar data = google.visualization.arrayToDataTable(result); /* 데이터 셋팅 */\n");
      out.write("                 \tvar options = {\n");
      out.write("                 \t\t\tvAxis : {\n");
      out.write("                 \t\t\t\tminValue : 0\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseries : {\n");
      out.write("                 \t\t\t\t0: {color: 'pink'},\n");
      out.write("                 \t\t\t\t1: {color: 'lightgray'},\n");
      out.write("                 \t\t\t\t2: {color: 'skyblue', type: 'line', lineWidth: 4}\n");
      out.write("                 \t\t\t\t\n");
      out.write("                 \t\t\t},\n");
      out.write("                 \t\t\tseriesType :'bars',\n");
      out.write("                 \t\t\tbar : {\n");
      out.write("                 \t\t\t\tgroupWidth : '20%' // 그래프 너비 설정 %\n");
      out.write("                 \t\t\t},\n");
      out.write("//                  \t\t\tlegend : 'none'\n");
      out.write("                 \t\t\t}; /* 옵션 셋팅 */\n");
      out.write("                 \tvar chart = new google.visualization.ComboChart(document.getElementById('yearlyAmountChart'));\n");
      out.write("                 \t\tchart.draw(data, options); /* 차트 그리기 */\n");
      out.write("             \t}\n");
      out.write("         \t});\n");
      out.write("     \t}\n");
      out.write(" }\n");
      out.write(" \n");
      out.write("function getYear() {\n");
      out.write("\tvar yearOption = \"<select name='year' id='year' class='selDate'>\";\n");
      out.write("\tvar daily;\n");
      out.write("\tvar y = 0;\n");
      out.write("\t$.ajax({\n");
      out.write("\t\ttype:\"get\",\n");
      out.write("\t\turl:\"totalYearList.json\",\n");
      out.write("\t\tdataType:\"json\",\n");
      out.write("\t\tsuccess:function(data) {\n");
      out.write("\t\t\t$(data).each(function() {\n");
      out.write("\t\t\t\tdaily = this.day;\n");
      out.write("\t\t\t\tvar year = daily.split(\"-\")[0];\n");
      out.write("\t\t\t\tvar oldY = year;\n");
      out.write("\t\t\t\tif(oldY != y) {\n");
      out.write("\t\t\t\t\tyearOption += \"<option value='\"+oldY+\"'>\"+oldY+\"년</option>\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\ty = oldY;\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\tyearOption += \"</select>\";\n");
      out.write("\t\t\t$(\"#selYear\").html(yearOption);\n");
      out.write("\t\t\t$(\"#selYear\").find(\"#year\").val(y).prop(\"selected\", true);\n");
      out.write("\t\t\t$(\"#btnYear\").val(y);\n");
      out.write("\t\t\tgetMonth();\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function getMonth() {\n");
      out.write("\tvar monthOption = \"<select name='month' id='month' class='selDate'>\";\n");
      out.write("\tvar daily;\n");
      out.write("\tvar m = 0;\n");
      out.write("\t$.ajax({\n");
      out.write("\t\ttype:\"get\",\n");
      out.write("\t\turl:\"totalMonthList.json\",\n");
      out.write("\t\tdataType:\"json\",\n");
      out.write("\t\tdata:{\"year\":year},\n");
      out.write("\t\tsuccess:function(data) {\n");
      out.write("\t\t\t$(data).each(function() {\n");
      out.write("\t\t\t\tdaily = this.day;\n");
      out.write("\t\t\t\tvar month = daily.split(\"-\")[1];\n");
      out.write("\t\t\t\tvar oldM = month;\n");
      out.write("\t\t\t\tif(oldM != m) {\n");
      out.write("\t\t\t\t\tmonthOption += \"<option value='\"+oldM+\"'>\"+oldM+\"월</option>\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tm = oldM;\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\tmonthOption += \"</select>\";\n");
      out.write("\t\t\t$(\"#selMonth\").html(monthOption);\n");
      out.write("\t\t\t$(\"#selMonth\").find(\"#month\").val(m).prop(\"selected\", true);\n");
      out.write("\t\t\t$(\"#btnMonth\").val(m);\n");
      out.write("\t\t\tMonth = m;\n");
      out.write("\t\t\tmonthStart();\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
